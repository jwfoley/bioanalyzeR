% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calibration.R
\name{calibrate.electrophoresis}
\alias{calibrate.electrophoresis}
\alias{calculate.length}
\alias{calculate.concentration}
\alias{calculate.molarity}
\title{Electrophoresis calibrations}
\usage{
calculate.length(
  electrophoresis,
  method = union(c("hyman", "interpolation", "loglinear"),
    eval(formals(splinefun)$method)),
  extrapolate = FALSE
)

calculate.concentration(electrophoresis, ladder.concentrations = NULL)

calculate.molarity(electrophoresis)
}
\arguments{
\item{electrophoresis}{An \code{\link{electrophoresis}} object.}

\item{method}{The method used to fit the mobility model of molecule length vs. migration distance, either \code{"interpolation"} (linear interpolation via \code{\link{approxfun}}), \code{"loglinear"} (log-linear regression via \code{\link{lm}} with the model \code{relative.distance ~ log(length)}), or one of the methods of \code{\link{splinefun}} (monotone methods recommended). Can be abbreviated.}

\item{ladder.concentrations}{The true concentrations of the ladder peaks. If provided (from the Bioanalyzer), the concentration coefficient is fit according to the non-marker ladder peaks and then adjusted for each sample according to the relative fluorescence area of its markers compared with the ladder. If \code{NULL} (TapeStation), concentrations are fit according to only the upper marker if present or the lower marker otherwise; these marker concentrations are assumed to be correct.}
}
\value{
The same \code{\link{electrophoresis}} object with the new estimated variable added to its \code{$data} member. \code{calculate.length} also adds estimated length boundaries to the \code{$peaks} member and aligned-time or relative-distance boundaries to \code{$regions}.
}
\description{
Estimate the derived values from raw electrophoresis data.
}
\details{
Ladder peaks of known length and possibly concentration are used to fit mobility models and coefficients of fluorescence area vs. concentration. If there are multiple ladders (e.g. one per ScreenTape), each sample is fit according to its corresponding ladder. Derived values are estimated for every row in \code{electrophoresis$data}, though they are \code{NA} outside the range of interpolation from the ladder.

Spline fitting seems to perform reasonably well on all data, and among R's built-in methods Hyman filtering of the FMM spline (\code{method = "hyman"}) is preferred to ensure monotonicity. Agilent appears to use linear interpolation with DNA data and log-linear regression on RNA data, so you could choose those options if you want to reproduce the results of the software more precisely. However, linear interpolation creates sudden spikes in the derivative that make the concentration and molarity estimates unstable; spline fitting is basically a smoother version of that. Log-linear regression is the standard theoretical approach but does not actually fit the data very well; more sophisticated parametric models may be added in the future.
}
